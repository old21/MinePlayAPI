services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
      - '8080:8080'
    env_file: .env
    depends_on:
      - redis
      - db
      - minio
    healthcheck:
      test: curl --fail http://localhost:8000/ || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  broker:
    image: apache/kafka:latest
    hostname: broker
    container_name: broker
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
  redis:
    image: redis:7.2.4-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  db:
    image: postgres
    volumes:
      - ./postgres/create-databases.sh:/docker-entrypoint-initdb.d/create-databases.sh
      - pg_data:/var/lib/postgresql/data
      - type: tmpfs
        target: /dev/shm
        tmpfs:
          size: 134217728 # 128*2^20 bytes = 128Mb
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    env_file: .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d global" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # S3
  minio:
    image: minio/minio:RELEASE.2024-04-06T05-26-02Z
    command: server --console-address ":9001" /data
    ports:
      - '9001:9001'
    env_file: .env
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - minio_data:/data

volumes:
  redis_data:
  pg_data:
  minio_data: